




4. 인터페이스를 활용한 DAO (Data Access Object) 구현(implement) 하기
    1) DB에 회원 정보를 CRUD(Create, Retrieve, Update, Delete)하는
       daoimple를 여러 DB 제품이 지원될 수 있게 구현함.
    2) db.properties에서 database의 종류에 대한 정보를 읽고
       그 정보에 맞게 dao 인스턴스를 생성하여 실행될 수 있게 함.

5. 인터페이스 요소 
    1) 상수
        - 모든 변수는 상수로 변환 됨 (public static final)
    2) 추상 메서드
        - 모든 선언된 메서드는 추상 메서드 (public abstract)
    3) 디폴트 메서드 (java8 이후)
        - 기본 구현을 가지는 메서드              
        - 인터페이스를 구현하는 클래스들에서 공통으로 사용할 수 있는
          기본 메서드
        - default 키워드 사용
            - default void descrieve() {}  
    4) 정적(static) 메서드 (java8 이후)    
        - 인스턴스 생성과 상관없이 인스턴스 타입으로 사용할 수 있는 메서드
    5) private 메서드 (java9 이후)  
        - 인스턴스  구현하는 클래스에서 사용하거나 재정의 할 수 없음
        - 인터페이스 내부에서만 사용하기 위해 구현하는 메서드
        - default 메서드나 static 메서드에서 사용함

6. 여러 인터페이스 구현(implement)하기
    1) 자바의 인터페이스는 구현 코드가 없음
        - 하나의 클래스가 여러 인터페이스를 구현할 수 있음
    2) 디폴트 메서드가 중복되는 경우는 클래스에서 재정의 하여야 함

7. 인터페이스의 상속(extends)
    1) 인터페이스 사이에도 상속을 사용할 수 있음
    2) extends 키워드를 사용
    3) 인터페이스는 다중 상속 가능하고
       구현 코드의 상속이 아니므로 타입 상속이라고 함

8. 클래스 상속과 인터페이스 구현 함께 쓰기
    