1. 단일 책임의 원칙 (SRP : Single Responsibility Priciple)
    1) 객체는 하나의 책임만을 맡아야 함
        - 예) Calc 클래스 (사칙계산 기능)
                - 오로지 사칙연산 연산을 위한 기능만 담당해야 함
    2) 책임을 분명히 하여 다른 책임의 변경으로부터 자유로워짐 
    3) 복잡도를 줄이므로 발생할 버그에 대처할 수 있음 
    4) 응집도는 높게, 겹합도는 낮게 설계하는 것                

2. 


6. 객체지향 설계 5대 원칙(SOLID) 요약
    1) SRP 
        - 객체는 하나의 책임만을 맡아야 함
    2) OCP
        - 모듈은 확장에는 열려있어야 하고, 변경에는 닫혀있어야 함
    3) LSP
        - 기반 클래스는 파생 클래스로 대체 가능해야 함
    4) ISP
        - 클라이언트에 특화된 여러개의 인터페이스가 하나의 범용 인터페이스보다 나음
    5) DIP
        - 클라이언트는 구체 클래스가 아닌 인터페이스나 추상클래스에 의존해야 함